1(a) What is Spring Boot? Which tools are required to build anapplication in Spring Boot.
(b) What is multiple inheritance by interface in JAVA. Explain itby using an example.
(c) Execute small JAVA collection programs for the List & Queue.
2.(a) List out features of the 12-factor app. Explain about "MinimalViable Product" release of a software.
(b) What is Spring Initializi? How Spring Initializ creates aMaven Spring Boot application skeleton?
(c) What is meant by microservices? Discuss about theadvantageous features of Microservices, also mention some drawbacks of microservices.
3 (a) Write a simple Spring application, to understand the life of beans .
(b) Describe the purpose of Spring Boot starters. List and explain Spring Boot starters for web and actuator functionalities.
(c) Which annotations are included in @SpringBootApplication?Explain it by example.
4(a) Define a simple Spring Bean and explain how to configure iusing XML. For example, answer should show a class annotated as a bean and a corresponding XMI configuration file.
(b)Write a Java Program to demonstrate annotation-based Java configuration UserRepository class with a method saveUser.
(c)Write POJO Java program to convert tightly coupled code intoloosely coupled code to: Create a parent class A with a method display(). Create another class B that inherits class A and contains a method display. Create a main class to call the display method.
5.(a) Demonstrate how to configure an application property inapplication.properties and read it using @Value. For example,answer should include setting a property in application.properties and reading it in a class. 
(b)Give an example demonstrating the use of the @PreDestroyand "@PostConstruct annotations.
(c)Create a package of 4 classes named as address, Teacher, app,javaConfig. Address has fields as houseNo, city, postOffice, pin, state. Use setter method for the given fields and toString method to printstring representation of the object. Teacher class has name, id, mobileNo, and address fields. Use the setter method and toString method for this class. javaConfig class is java annotation-based configuration file which creates two address beans, and oneteacher bean and initialize the fields of both classes. In teacher class use any one address by using @Qualifier annotation. Call the teacher object in app class which consists of main method of Spring application.